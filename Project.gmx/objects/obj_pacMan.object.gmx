<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>pacMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboardLeft = false;
keyboardRight = false;
keyboardDown = false;
keyboardUp = false;

spd = 3;

lookingForEntranceLeft = false;
lookingForEntranceRight = false;
lookingForEntranceDown = false;
lookingForEntranceUp = false;

global.debug = false;

hit = false;

var cell_width = 48;
var cell_height = 48;

var hcells = room_width div cell_width;
var vcells = room_height div cell_height;

global.grid = mp_grid_create(0,0,hcells,vcells,cell_width,cell_height);

mp_grid_add_instances(global.grid,obj_collision,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lookingForEntranceLeft = false;
lookingForEntranceRight = false;
lookingForEntranceUp = false;
lookingForEntranceDown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (lookingForEntranceLeft){
    if (!place_meeting(x-spd,y,obj_collision)){
        direction = 180;
        lookingForEntranceLeft = false;
    }
}
if (lookingForEntranceRight){
    if (!place_meeting(x+spd,y,obj_collision)){
        direction = 0;
        lookingForEntranceRight = false;
    }
}
if (lookingForEntranceUp){
    if (!place_meeting(x,y-spd,obj_collision)){
        direction = 90;
        lookingForEntranceUp = false;
    }
}
if (lookingForEntranceDown){
    if (!place_meeting(x,y+spd,obj_collision)){
        direction = 270;
        lookingForEntranceDown = false;
    }
}
spd = 4;
if (direction == 180){
    if (place_meeting(x-spd,y,obj_collision)){
        spd = 0;
        if (!preciseCollision){
            while(!place_meeting(x-1,y,obj_collision)){
                x-=1;
            }
            preciseCollision = true;
        }
    }
}else if(direction == 270){
    if (place_meeting(x,y+spd,obj_collision)){
        spd = 0;
        if (!preciseCollision){
            while(!place_meeting(x,y+1,obj_collision)){
                y+=1;
            }
            preciseCollision = true;
        }
    }
}else if(direction == 0){
    if (place_meeting(x+spd,y,obj_collision)){
        spd = 0;
        if (!preciseCollision){
            while(!place_meeting(x+1,y,obj_collision)){
                x+=1;
            }
            preciseCollision = true;
        }
    }
}else{
    if (place_meeting(x,y-spd,obj_collision)){
        spd = 0;
        if (!preciseCollision){
            while(!place_meeting(x,y-1,obj_collision)){
                y-=1;
            }
            preciseCollision = true;
        }
    }
}
if (spd != 0){
    preciseCollision = false;
}
image_angle = direction;
speed = spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboardLeft = keyboard_check(vk_left);
keyboardRight = keyboard_check(vk_right);
keyboardUp = keyboard_check(vk_up);
keyboardDown = keyboard_check(vk_down);

if (keyboard_check_pressed(vk_escape)){
    if (global.debug){
        global.debug = false;
    }
    else{
        global.debug = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboardLeft){
        lookingForEntranceLeft = true;
        lookingForEntranceRight = false;
        lookingForEntranceUp = false;
        lookingForEntranceDown = false;
        alarm[0] = room_speed;
}
if (keyboardRight){
        lookingForEntranceLeft = false;
        lookingForEntranceRight = true;
        lookingForEntranceUp = false;
        lookingForEntranceDown = false;
        alarm[0] = room_speed;
}
if (keyboardUp){
        lookingForEntranceLeft = false;
        lookingForEntranceRight = false;
        lookingForEntranceUp = true;
        lookingForEntranceDown = false;
        alarm[0] = room_speed;
}
if (keyboardDown){
        lookingForEntranceLeft = false;
        lookingForEntranceRight = false;
        lookingForEntranceUp = false;
        lookingForEntranceDown = true;
        alarm[0] = room_speed;
}
view_xview = obj_viewControl.x - view_wview / 2;
view_yview = obj_viewControl.y - view_hview / 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!hit){
    other.alarm[0] = 10;
    hit = true;
    alarm[1] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blob">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!hit){
    other.alarm[0] = 10;
    hit = true;
    alarm[1] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mp_grid_destroy(global.grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
